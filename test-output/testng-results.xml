<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="11" passed="8" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-08-22T21:40:29 SAST" name="Loan Department" finished-at="2024-08-22T21:40:29 SAST" duration-ms="50">
    <groups>
      <group name="smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@47faa49c]" name="ploan" class="test.day2"/>
        <method signature="day4.LoginHomeAPI()[pri:0, instance:test.day4@28f2a10f]" name="LoginHomeAPI" class="test.day4"/>
        <method signature="day3.mobileCarLogin()[pri:0, instance:test.day3@4dbb42b7]" name="mobileCarLogin" class="test.day3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2024-08-22T21:40:29 SAST" name="Car Loan" finished-at="2024-08-22T21:40:29 SAST" duration-ms="50">
      <class name="test.day3">
        <test-method is-config="true" signature="bfSuite()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="bfSuite" finished-at="2024-08-22T21:40:29 SAST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="beforeClass" finished-at="2024-08-22T21:40:29 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="BeforeMethod" finished-at="2024-08-22T21:40:29 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="mobileCarLogin()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="mobileCarLogin" finished-at="2024-08-22T21:40:29 SAST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileCarLogin -->
        <test-method signature="mobileCarLogout()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="mobileCarLogout" finished-at="2024-08-22T21:40:29 SAST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileCarLogout -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="BeforeMethod" finished-at="2024-08-22T21:40:29 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="BeforeMethod" finished-at="2024-08-22T21:40:29 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method signature="webCarlogin(java.lang.String)[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="webCarlogin" finished-at="2024-08-22T21:40:29 SAST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://defaulturl.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webCarlogin -->
        <test-method signature="LoginCarAPI()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="LoginCarAPI" finished-at="2024-08-22T21:40:29 SAST" depends-on-methods="test.day3.webCarlogin" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginCarAPI -->
        <test-method is-config="true" signature="BeforeMethod()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="BeforeMethod" finished-at="2024-08-22T21:40:29 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.day3@4dbb42b7]" started-at="2024-08-22T21:40:29 SAST" name="afterClass" finished-at="2024-08-22T21:40:29 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:test.day1@383bfa16]" started-at="2024-08-22T21:40:29 SAST" name="afterSuite" finished-at="2024-08-22T21:40:29 SAST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- test.day1 -->
    </test> <!-- Car Loan -->
    <test started-at="2024-08-22T21:40:29 SAST" name="Personal Loan" finished-at="2024-08-22T21:40:29 SAST" duration-ms="49">
      <class name="test.day4">
        <test-method signature="LoginHomeAPI()[pri:0, instance:test.day4@28f2a10f]" started-at="2024-08-22T21:40:29 SAST" name="LoginHomeAPI" finished-at="2024-08-22T21:40:29 SAST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginHomeAPI -->
        <test-method signature="mobileHomeLogin()[pri:0, instance:test.day4@28f2a10f]" started-at="2024-08-22T21:40:29 SAST" name="mobileHomeLogin" finished-at="2024-08-22T21:40:29 SAST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileHomeLogin -->
        <test-method signature="webHomelogin()[pri:0, instance:test.day4@28f2a10f]" started-at="2024-08-22T21:40:29 SAST" name="webHomelogin" finished-at="2024-08-22T21:40:29 SAST" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.day4.webHomelogin(day4.java:12)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webHomelogin -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="BeforeTest()[pri:0, instance:test.day2@47faa49c]" started-at="2024-08-22T21:40:29 SAST" name="BeforeTest" finished-at="2024-08-22T21:40:29 SAST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeforeTest -->
        <test-method signature="ploan()[pri:0, instance:test.day2@47faa49c]" started-at="2024-08-22T21:40:29 SAST" name="ploan" finished-at="2024-08-22T21:40:29 SAST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method signature="Demo()[pri:0, instance:test.day1@383bfa16]" started-at="2024-08-22T21:40:29 SAST" name="Demo" finished-at="2024-08-22T21:40:29 SAST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.day1@383bfa16]" started-at="2024-08-22T21:40:29 SAST" name="lastexecution" finished-at="2024-08-22T21:40:29 SAST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
